{"ast":null,"code":"var _jsxFileName = \"/Users/praneeth/praneeth-weather/src/App.js\",\n  _s = $RefreshSig$();\n// import './App.css';\n// import React, { useEffect, useState } from \"react\";\n// import { Dimmer, Loader } from 'semantic-ui-react';\n// import Weather from './components/weather';\n// import Forecast from './components/forecast';\n// export default function App() {\n\n//   const [lat, setLat] = useState([]);\n//   const [long, setLong] = useState([]);\n//   const [weatherData, setWeatherData] = useState([]);\n//   const [forecast, setForecast] = useState([]);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//       navigator.geolocation.getCurrentPosition(function(position) {\n//         setLat(position.coords.latitude);\n//         setLong(position.coords.longitude);\n//       });\n\n//       getWeather(lat, long)\n//       .then(weather => {\n//         setWeatherData(weather);\n//         setError(null);\n//       })\n//       .catch(err => {\n//         setError(err.message);\n//       });\n\n//       getForecast(lat, long)\n//         .then(data => {\n//           setForecast(data);\n//           setError(null);\n//         })\n//         .catch(err => {\n//           setError(err.message);\n//         });\n\n//   }, [lat,long,error])\n\n//   function handleResponse(response) {\n//     if (response.ok) {\n//       return response.json();\n//     } else {\n//       throw new Error(\"Please Enable your Location in your browser!\");\n//     }\n//   }\n\n//   function getWeather(lat, long) {\n//     return fetch(\n//       `${process.env.REACT_APP_API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`\n//     )\n//       .then(res => handleResponse(res))\n//       .then(weather => {\n//         if (Object.entries(weather).length) {\n//           const mappedData = mapDataToWeatherInterface(weather);\n//           return mappedData;\n//         }\n//       });\n//   }\n\n//   function getForecast(lat, long) {\n//     return fetch(\n//       `${process.env.REACT_APP_API_URL}/forecast/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`\n//     )\n//       .then(res => handleResponse(res))\n//       .then(forecastData => {\n//         if (Object.entries(forecastData).length) {\n//           return forecastData.list\n//             .filter(forecast => forecast.dt_txt.match(/09:00:00/))\n//             .map(mapDataToWeatherInterface);\n//         }\n//       });\n//   }\n\n//   function mapDataToWeatherInterface(data) {\n//     const mapped = {\n//       date: data.dt * 1000, // convert from seconds to milliseconds\n//       description: data.weather[0].main,\n//       temperature: Math.round(data.main.temp),\n//     };\n\n//     // Add extra properties for the five day forecast: dt_txt, icon, min, max\n//     if (data.dt_txt) {\n//       mapped.dt_txt = data.dt_txt;\n//     }\n\n//     return mapped;\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       {(typeof weatherData.main != 'undefined') ? (\n//         <div>\n//           <Weather weatherData={weatherData}/>\n//           <Forecast forecast={forecast} weatherData={weatherData}/>\n//         </div>\n//       ): (\n//         <div>\n//           <Dimmer active>\n//             <Loader>Loading..</Loader>\n//           </Dimmer>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\nimport './App.css';\nimport React, { useEffect, useState, useRef } from \"react\"; // Import useRef\nimport { Dimmer, Loader } from 'semantic-ui-react';\nimport Weather from './components/weather';\nimport Forecast from './components/forecast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n  // Step 1: Using React.forwardRef()\n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n  const [weatherData, setWeatherData] = useState([]);\n  const [forecast, setForecast] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n    });\n    getWeather(lat, long).then(weather => {\n      setWeatherData(weather);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n    });\n    getForecast(lat, long).then(data => {\n      setForecast(data);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n    });\n  }, [lat, long, error]);\n  function handleResponse(response) {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error(\"Please Enable your Location in your browser!\");\n    }\n  }\n  function getWeather(lat, long) {\n    return fetch(`${process.env.REACT_APP_API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`).then(res => handleResponse(res)).then(weather => {\n      if (Object.entries(weather).length) {\n        const mappedData = mapDataToWeatherInterface(weather);\n        return mappedData;\n      }\n    });\n  }\n  function getForecast(lat, long) {\n    return fetch(`${process.env.REACT_APP_API_URL}/forecast/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`).then(res => handleResponse(res)).then(forecastData => {\n      if (Object.entries(forecastData).length) {\n        return forecastData.list.filter(forecast => forecast.dt_txt.match(/09:00:00/)).map(mapDataToWeatherInterface);\n      }\n    });\n  }\n  function mapDataToWeatherInterface(data) {\n    const mapped = {\n      date: data.dt * 1000,\n      // convert from seconds to milliseconds\n      description: data.weather[0].main,\n      temperature: Math.round(data.main.temp)\n    };\n\n    // Add extra properties for the five day forecast: dt_txt, icon, min, max\n    if (data.dt_txt) {\n      mapped.dt_txt = data.dt_txt;\n    }\n    return mapped;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    ref: ref,\n    children: typeof weatherData.main != 'undefined' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Weather, {\n        weatherData: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        forecast: forecast,\n        weatherData: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dimmer, {\n        active: true,\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          children: \"Loading..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n}, \"tR/Q1vYR+R8eAuUqAPmVbJOgg38=\")), \"tR/Q1vYR+R8eAuUqAPmVbJOgg38=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App$React.forwardRef\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Dimmer","Loader","Weather","Forecast","jsxDEV","_jsxDEV","App","_s","forwardRef","_c","props","ref","lat","setLat","long","setLong","weatherData","setWeatherData","forecast","setForecast","error","setError","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","getWeather","then","weather","catch","err","message","getForecast","data","handleResponse","response","ok","json","Error","fetch","process","env","REACT_APP_API_URL","REACT_APP_API_KEY","res","Object","entries","length","mappedData","mapDataToWeatherInterface","forecastData","list","filter","dt_txt","match","map","mapped","date","dt","description","main","temperature","Math","round","temp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","active","_c2","$RefreshReg$"],"sources":["/Users/praneeth/praneeth-weather/src/App.js"],"sourcesContent":["// import './App.css';\n// import React, { useEffect, useState } from \"react\";\n// import { Dimmer, Loader } from 'semantic-ui-react';\n// import Weather from './components/weather';\n// import Forecast from './components/forecast';\n// export default function App() {\n  \n//   const [lat, setLat] = useState([]);\n//   const [long, setLong] = useState([]);\n//   const [weatherData, setWeatherData] = useState([]);\n//   const [forecast, setForecast] = useState([]);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//       navigator.geolocation.getCurrentPosition(function(position) {\n//         setLat(position.coords.latitude);\n//         setLong(position.coords.longitude);\n//       });\n    \n//       getWeather(lat, long)\n//       .then(weather => {\n//         setWeatherData(weather);\n//         setError(null);\n//       })\n//       .catch(err => {\n//         setError(err.message);\n//       });\n\n//       getForecast(lat, long)\n//         .then(data => {\n//           setForecast(data);\n//           setError(null);\n//         })\n//         .catch(err => {\n//           setError(err.message);\n//         });\n\n//   }, [lat,long,error])\n\n//   function handleResponse(response) {\n//     if (response.ok) {\n//       return response.json();\n//     } else {\n//       throw new Error(\"Please Enable your Location in your browser!\");\n//     }\n//   }\n\n//   function getWeather(lat, long) {\n//     return fetch(\n//       `${process.env.REACT_APP_API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`\n//     )\n//       .then(res => handleResponse(res))\n//       .then(weather => {\n//         if (Object.entries(weather).length) {\n//           const mappedData = mapDataToWeatherInterface(weather);\n//           return mappedData;\n//         }\n//       });\n//   }\n  \n//   function getForecast(lat, long) {\n//     return fetch(\n//       `${process.env.REACT_APP_API_URL}/forecast/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`\n//     )\n//       .then(res => handleResponse(res))\n//       .then(forecastData => {\n//         if (Object.entries(forecastData).length) {\n//           return forecastData.list\n//             .filter(forecast => forecast.dt_txt.match(/09:00:00/))\n//             .map(mapDataToWeatherInterface);\n//         }\n//       });\n//   }\n\n//   function mapDataToWeatherInterface(data) {\n//     const mapped = {\n//       date: data.dt * 1000, // convert from seconds to milliseconds\n//       description: data.weather[0].main,\n//       temperature: Math.round(data.main.temp),\n//     };\n  \n//     // Add extra properties for the five day forecast: dt_txt, icon, min, max\n//     if (data.dt_txt) {\n//       mapped.dt_txt = data.dt_txt;\n//     }\n  \n//     return mapped;\n//   }\n  \n//   return (\n//     <div className=\"App\">\n//       {(typeof weatherData.main != 'undefined') ? (\n//         <div>\n//           <Weather weatherData={weatherData}/>\n//           <Forecast forecast={forecast} weatherData={weatherData}/>\n//         </div>\n//       ): (\n//         <div>\n//           <Dimmer active>\n//             <Loader>Loading..</Loader>\n//           </Dimmer>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n\n\nimport './App.css';\nimport React, { useEffect, useState, useRef } from \"react\"; // Import useRef\nimport { Dimmer, Loader } from 'semantic-ui-react';\nimport Weather from './components/weather';\nimport Forecast from './components/forecast';\n\nconst App = React.forwardRef((props, ref) => { // Step 1: Using React.forwardRef()\n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n  const [weatherData, setWeatherData] = useState([]);\n  const [forecast, setForecast] = useState([]);\n  const [error, setError] = useState(null);\n  \n  useEffect(() => {\n      navigator.geolocation.getCurrentPosition(function(position) {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      });\n    \n      getWeather(lat, long)\n      .then(weather => {\n        setWeatherData(weather);\n        setError(null);\n      })\n      .catch(err => {\n        setError(err.message);\n      });\n\n      getForecast(lat, long)\n        .then(data => {\n          setForecast(data);\n          setError(null);\n        })\n        .catch(err => {\n          setError(err.message);\n        });\n\n  }, [lat,long,error])\n\n  function handleResponse(response) {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error(\"Please Enable your Location in your browser!\");\n    }\n  }\n\n  function getWeather(lat, long) {\n    return fetch(\n      `${process.env.REACT_APP_API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`\n    )\n      .then(res => handleResponse(res))\n      .then(weather => {\n        if (Object.entries(weather).length) {\n          const mappedData = mapDataToWeatherInterface(weather);\n          return mappedData;\n        }\n      });\n  }\n  \n  function getForecast(lat, long) {\n    return fetch(\n      `${process.env.REACT_APP_API_URL}/forecast/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`\n    )\n      .then(res => handleResponse(res))\n      .then(forecastData => {\n        if (Object.entries(forecastData).length) {\n          return forecastData.list\n            .filter(forecast => forecast.dt_txt.match(/09:00:00/))\n            .map(mapDataToWeatherInterface);\n        }\n      });\n  }\n\n  function mapDataToWeatherInterface(data) {\n    const mapped = {\n      date: data.dt * 1000, // convert from seconds to milliseconds\n      description: data.weather[0].main,\n      temperature: Math.round(data.main.temp),\n    };\n  \n    // Add extra properties for the five day forecast: dt_txt, icon, min, max\n    if (data.dt_txt) {\n      mapped.dt_txt = data.dt_txt;\n    }\n  \n    return mapped;\n  }\n  \n  return (\n    <div className=\"App\" ref={ref}>\n      {(typeof weatherData.main != 'undefined') ? (\n        <div>\n          <Weather weatherData={weatherData}/>\n          <Forecast forecast={forecast} weatherData={weatherData}/>\n        </div>\n      ): (\n        <div>\n          <Dimmer active>\n            <Loader>Loading..</Loader>\n          </Dimmer>\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}